shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
shiny::runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
a1 <- c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh' ,	'4G','Pri. LTE','NB-IoT','UHF','LoRa')
a1 <- as.data.frame(c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh' ,	'4G','Pri. LTE','NB-IoT','UHF','LoRa'))
View(a1)
a1 <- as.data.frame('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh' ,	'4G','Pri. LTE','NB-IoT','UHF','LoRa')
View(a1)
View(a1)
a1 <- as.data.frame(c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh' ,	'4G','Pri. LTE','NB-IoT','UHF','LoRa'))
a1 <- as.data.frame(c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh','4G','Pri. LTE','NB-IoT','UHF','LoRa'))
View(a1)
a1 <- as.data.frame(Tech = c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh','4G','Pri. LTE','NB-IoT','UHF','LoRa'))
View(a1)
a1 <- data.frame(Tech = c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh','4G','Pri. LTE','NB-IoT','UHF','LoRa'))
View(a1)
a2 <- data.frame(Tech = c('NBPLC','Fiber','ZigBee','4G','Pri. LTE','NB-IoT','UHF','LoRa','5G','SATCOM'))
View(a2)
combine <- merge(a1,a2)
View(combine)
shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
View(a2)
runApp('MCMD')
t2<-c()
t2<-c()for(i in length(combineTechNT)){
if(test[i,1] == "a1"){t1 <- a1}
if(test[i,1] == "a2"){t2 <- a2}
}
runApp()
runApp('MCMD')
runApp()
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
View(combine)
View(a2)
View(a1)
View(combine)
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
tc <- c()
tc <- data.frame(Tech = c()
tc <- data.frame(Tech = c())
tc <- data.frame(Tech = c())
combine <- merge(a1,a2,tc)
combine <- merge(a1,tc)
View(combine)
install.packages("tidyverse")
shiny::runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
datalist<- list(a1,a2,tc)
View(datalist)
runApp('MCMD')
datalist[!apply(datalist == "", 1, all),]
datalist <- NULL
datalist<- list(a1,a2,tc)
datalist[2] <- NULL
notem <- c(t1,t2,t3)
data_list <- list(notem)
notem <- c(a1,a2,tc)
data_list <- list(notem)
View(notem)
runApp('MCMD')
a1 <- data.frame(Tech = c('NBPLC','Fiber','ZigBee','WiFi','RF-Mesh','4G','Pri. LTE','NB-IoT','UHF','LoRa'))
a2 <- data.frame(Tech = c('NBPLC','Fiber','ZigBee','4G','Pri. LTE','NB-IoT','UHF','LoRa','5G','SATCOM'))
tc <- data.frame(Tech = c())
notem <- c(a1,a2,tc)
View(notem)
data_list <- list(notem)
View(a2)
View(data_list)
View(data_list)
View(notem)
notem[["Tech"]]
notem[["Tech"]]
notem[["Tech"]]
(notem)
data_list <- list(notem)
data_list
notem[1]
notem[2]
combine <- merge(notem[1],notem[2])
combine
length(notem)
runApp('MCMD')
notem %>% reduce(inner_join)
full_dplyr  <- notem %>% full_join(notem,  by = mergeCols)
runApp('MCMD')
runApp('MCMD')
shiny::runApp('MCMD')
shiny::runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp('MCMD')
runApp()
runApp('MCMD')
